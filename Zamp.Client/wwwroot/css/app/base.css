@import "theme.css";

*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

input,
button,
textarea,
select {
    font: inherit;
    
    &.bg-danger {
        background-color: var(--bg-danger);
    }
}

html, body {
    height: 100%;
}

body {
    font-family: 'Roboto', sans-serif;
    font-size: 14px; /* Do not use REM. If the user uses Settings, Appearance font to set a different font size the layout will get screwed up if you use REM */
    color: var(--text);
    background-color: var(--page-bg);
}

.bold {
    font-weight: bold;
}

.app-help span {
    background-color: transparent;
    display: flex;
    border: 3px solid;
    border-radius: 99em;
    position: relative;
    transform-origin: 50% 50%;
    cursor: pointer;

    &:before {
        content: "?";
        display: block;
        position: absolute;
        width: 12px;
        height: 12px;
        border-radius: 50%;
        font-weight: bold;
    }

    &.app-help-icon-20 {
        width: 20px;
        height: 20px;

        &:before {
            top: -1px;
            left: 4px;
            font-size: 13px;
        }
    }

    &.app-help-icon-24 {
        width: 24px;
        height: 24px;

        &:before {
            top: 0;
            left: 5.5px;
        }
    }
}

h1 {
    color: var(--text);
    font-size: 20px;
    font-weight: bold;
    letter-spacing: 1px;
    outline: none;
}

fieldset {
    border: none;
}

a {
    color: var(--link-text);
    text-decoration: none !important;
    cursor: pointer;
    display: inline-block;
    
    &:disabled {
        color: var(--text-disabled);
    }

    &:hover {
        color: var(--link-text-hover);
    }

    &:focus {
        text-decoration: none;
    }

    &.advanced-search {
        margin-left: 40px;
    }
}

label::after {
    content: ":";
}

input[type=checkbox] + label::after, input[type=radio] + label::after {
    content: "";
}

button, button-clone {
    color: var(--btn-text);
    background: var(--btn-bg);
    border: 1px solid;
    border-color: var(--border);
    border-radius: 7px;
    padding: 0 1em;
    cursor: pointer;
    white-space: nowrap;
    height: 30px;
    text-align: center;

    &:hover {
        background: var(--btn-bg-hover);
        cursor: pointer;
    }
    

    &.disabled, &:disabled, &.deemphasized {
        background: var(--btn-bg);
        color: var(--text-disabled);

        &:hover {
            background: var(--btn-bg);
            cursor: default;
        }
    }

    &.drop-down-appendment {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        margin-left: -4px;
        width: 24px;
        padding-left: 0;
        padding-right: 1px;

        &::before {
            content: "▼";
        }
    }

    &.right-side-squared {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        margin-right: 0;
    }

    &.left-side-squared {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        margin-left: -1px;
    }

    > span {
        vertical-align: middle;
    }
}

input-lov {
    display: grid;
    grid-template-columns: 1fr auto;
    width: 100%;
    padding: 0;
    
    & span {
        border-radius: 4px 0 0 4px;
        background-color: var(--modal-bg);
        border: 1px solid;
        border-color: var(--border);
        color: var(--text);
        padding: 4px 3px 0;
    }
    & button {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        width: 30px;
        padding: 4px 0 0;
        font-weight: bold;
        margin-left: -1px !important;
    }
}

input, textarea, textarea-viewonly {
    padding: 1px 4px;
}

span.show-border {
    border: 1px solid;
    border-color: var(--border);
    color: var(--text);
    border-radius: 4px;
    height: 30px;
    resize: none;
    padding: 4px;
}

input, select, textarea {
    border: 1px solid;
    border-color: var(--border);
    color: var(--text);
    background-color: var(--page-bg);
    border-radius: 4px;
    height: 30px;
    resize: none;

    &.right-side-squared {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

    &.disabled, &:disabled, &.deemphasized {
        color: var(--text-disabled);
        border-color: var(--border);
        background-color: transparent;

        &:hover {
            cursor: default;
        }
    }
}

select[size]:not([size='1']) {
    
    & option {
        padding: 2px 0 2px 4px;
    }
}

label.disabled, span.disabled, &.deemphasized {
    color: var(--text-disabled);
}

textarea-viewonly {
    overflow-y: auto;

    &.show-border {
        border: 1px solid;
        border-color: var(--border);
        padding: 4px;
    }
}

input[type='date'] {
    width: 7.5rem;

    &:not(:focus):in-range::-webkit-datetime-edit-year-field,
    &:not(:focus):in-range::-webkit-datetime-edit-month-field,
    &:not(:focus):in-range::-webkit-datetime-edit-day-field,
    &:not(:focus):in-range::-webkit-datetime-edit-text {
        color: var(--page-bg);
    }
}

input[type='checkbox'] {
    border: 1px solid;
    padding: 6px 4px;
    border-radius: 4px;
    height: 30px;

    &.right-side-squared {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }
}


select:focus,
textarea:focus,
input:focus {
}

button:focus-visible,
a:focus-visible {
}

.d-none {
    display: none !important;
}

.blink {
    animation: blinkkeyframes 1s linear infinite;
}
@keyframes blinkkeyframes {
    0%{opacity: .5;}

    100%{opacity: 1;}

    0%{opacity: .5;}
}
